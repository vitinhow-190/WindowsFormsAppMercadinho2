<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>